<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="KeywordsSearchHadoop">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../Program Files/Eclipse/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="KeywordsSearchHadoop.classpath">
        <pathelement location="bin"/>
        <pathelement location="../JAR_FILES/hadoop jar's/asm-3.2.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/avro-1.7.3.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-beanutils-1.7.0.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-beanutils-core-1.8.0.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-cli-1.2.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-codec-1.4.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-collections-3.2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-configuration-1.6.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-digester-1.8.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-el-1.0.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-io-2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-lang-2.5.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-logging-1.1.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-math-2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/commons-net-3.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/guava-11.0.2.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/hadoop-auth-2.0.0-cdh4.2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/hadoop-common-2.0.0-cdh4.2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/hadoop-core-2.0.0-mr1-cdh4.2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/hadoop-hdfs-2.0.0-cdh4.2.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/hsqldb-1.8.0.10.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jackson-core-asl-1.8.8.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jackson-mapper-asl-1.8.8.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jersey-core-1.8.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jersey-server-1.8.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jline-0.9.94.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jsch-0.1.42.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/jsr305-1.3.9.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/junit-4.8.2.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/log4j-1.2.17.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/mockito-all-1.8.5.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/paranamer-2.3.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/protobuf-java-2.4.0a.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/slf4j-api-1.6.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/slf4j-log4j12-1.6.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/snappy-java-1.0.4.1.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/xmlenc-0.52.jar"/>
        <pathelement location="../JAR_FILES/hadoop jar's/zookeeper-3.4.5-cdh4.2.1.jar"/>
        <pathelement location="../JAR_FILES/gson-2.6.2.jar"/>
        <pathelement location="../JAR_FILES/hadoop-0.21.0-mrunit.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="KeywordsSearchHadoop.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="keyword">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <classpath refid="KeywordsSearchHadoop.classpath"/>
        </junit>
    </target>
    <target name="KeywordsSearchHadoop">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.AllTests" todir="${junit.output.dir}"/>
            <test name="wordcount.WordCountsForDocsMapperTest" todir="${junit.output.dir}"/>
            <test name="wordcount.WordCountsForDocsReducerTest" todir="${junit.output.dir}"/>
            <test name="wordfreq.WordFreqMapperTest" todir="${junit.output.dir}"/>
            <test name="wordfreq.WordFreqReducerTest" todir="${junit.output.dir}"/>
            <classpath refid="KeywordsSearchHadoop.classpath"/>
        </junit>
    </target>
    <target name="AllTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.AllTests" todir="${junit.output.dir}"/>
            <classpath refid="KeywordsSearchHadoop.classpath"/>
        </junit>
    </target>
    <target name="WordCountsInDocuments">
        <java classname="wordcount.WordCountsInDocuments" failonerror="true" fork="yes">
            <classpath refid="KeywordsSearchHadoop.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
